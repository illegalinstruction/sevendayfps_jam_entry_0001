[gd_scene load_steps=11 format=2]

[ext_resource path="res://test-stuff/test_room_diffuse.png" type="Texture" id=1]
[ext_resource path="res://test-stuff/test_room.dae" type="PackedScene" id=2]
[ext_resource path="res://test-stuff/test_room_normal.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 0.203125, 0.177411, 0.153534, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
render_mode specular_schlick_ggx, ambient_light_disabled;

uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out2p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Color:5
	vec3 n_out5p0 = vec3(0.203125, 0.177411, 0.153534);
	float n_out5p1 = 1.000000;

// VectorOp:6
	vec3 n_out6p0 = n_out3p0 * n_out5p0;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out2p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out3p0;
	EMISSION = n_out6p0;
	NORMALMAP = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -352.8, 192.2 )
flags/ambient_light_disabled = true
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -600, 240 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -340, 160 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -340, 400 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -100, 320 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 120, 260 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 2, 0, 4, 0, 4, 0, 0, 8, 3, 0, 0, 0, 5, 0, 6, 1, 3, 0, 6, 0, 6, 0, 0, 5 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[node name="test_room" instance=ExtResource( 2 )]

[node name="Cube" parent="." index="0"]
material/0 = SubResource( 5 )

[node name="DirectionalLight" type="DirectionalLight" parent="." index="2"]
transform = Transform( 0.999931, 0.00772095, -0.00887474, 0, 0.754446, 0.656362, 0.0117632, -0.656317, 0.754394, 0, 0, 0 )
